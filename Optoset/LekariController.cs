using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using System.Xml;

namespace Optoset
{
    public class LekariController
    {

        public const string fileName = "lekari.xml";

        public LekariController()
        {
            Kluce = new HashSet<string>();
            Load();
        }

        public List<Lekar> Lekari { get; set; }
        public HashSet<string> Kluce{ get; set; }

        public void Load()
        {
            Lekari = new List<Lekar>();
            if (!File.Exists(Directory.GetCurrentDirectory() + "\\data\\" + fileName))
            {
                return;
            }
            var file = new XmlDocument();
            file.Load(Directory.GetCurrentDirectory() + "\\data\\" + fileName);

            var pb = file.GetElementsByTagName("lekari");
            if (pb.Count > 0)
            {
                XmlNodeList lekari = pb[0].SelectNodes("lekar");
                foreach (XmlNode l in lekari)
                {
                    var kod = l.SelectNodes("kod")[0].InnerText;
                    var titul = l.SelectNodes("titul")[0].InnerText;
                    var meno = l.SelectNodes("meno")[0].InnerText;
                    var priezvisko = l.SelectNodes("priezvisko")[0].InnerText;
                    var kpzs = l.SelectNodes("kpzs")[0].InnerText;

                    Lekari.Add(new Lekar(kod, titul, meno, priezvisko, kpzs));
                    Kluce.Add(kod);
                }
            }
        }

        public void Save()
        {
            if (!Directory.Exists(Directory.GetCurrentDirectory() + "\\data"))
            {
                Directory.CreateDirectory(Directory.GetCurrentDirectory() + "\\data");
            }

            XmlWriterSettings settings = new XmlWriterSettings();
            settings.Indent = true;
            XmlWriter writer = XmlWriter.Create(Directory.GetCurrentDirectory() + "\\data\\" + fileName, settings);

            writer.WriteStartDocument();

            writer.WriteComment("This file is generated by the program.");

            writer.WriteStartElement("lekari");

            foreach (var l in Lekari)
            {
                writer.WriteStartElement("lekar");
                writer.WriteElementString("kod", l.Kod);
                writer.WriteElementString("titul", l.Titul);
                writer.WriteElementString("meno", l.Meno);
                writer.WriteElementString("priezvisko", l.Priezvisko);
                writer.WriteElementString("kpzs", l.Kpzs);
                writer.WriteEndElement();
            }

            writer.WriteEndElement();

            writer.WriteEndDocument();
            writer.Flush();
            writer.Close();
        }

        public bool UpravitLekara(int index, string kod, string titul, string meno, string priezvisko, string kpzs)
        {
            Lekar z = Lekari[index];
            string oldKod = z.Kod;
            string oldTitul = z.Titul;
            string oldMeno = z.Meno;
            string oldPriezvisko = z.Priezvisko;
            string oldKpzs = z.Kpzs;

            z.Kod = kod;
            z.Titul = titul;
            z.Meno = meno;
            z.Priezvisko = priezvisko;
            z.Kpzs = kpzs;

            if (z.Validate())
            {
                if (Kluce.Contains(kod) && !oldKod.Equals(kod))
                {
                    MessageBox.Show("Lekár s daným kódom už existuje");
                    z.Kod = oldKod;
                    z.Titul = oldTitul;
                    z.Meno = oldMeno;
                    z.Priezvisko = oldPriezvisko;
                    z.Kpzs = oldKpzs;
                    return false;
                }
                Kluce.Remove(oldKod);
                Kluce.Add(kod);
                Lekari = Lekari.OrderBy(x => x.Kod).ToList();
                return true;
            }
            z.Kod = oldKod;
            z.Titul = oldTitul;
            z.Meno = oldMeno;
            z.Priezvisko = oldPriezvisko;
            z.Kpzs = oldKpzs;
            return false;
        }

        public bool PridatLekara(Lekar lekar)
        {
            if (lekar.Validate())
            {
                if (Kluce.Contains(lekar.Kod))
                {
                    MessageBox.Show("Lekár s daným kódom už existuje");
                    return false;
                }
                Lekari.Add(lekar);
                Kluce.Add(lekar.Kod);
                Lekari = Lekari.OrderBy(x => x.Kod).ToList();
                return true;
            }
            return false;
        }

        public bool ZmazatLekara(int index)
        {
            DialogResult dr = MessageBox.Show("Naozaj chcete zmazať daného lekára?", "Zmazanie lekára", MessageBoxButtons.YesNo);
            if (dr == DialogResult.Yes)
            {
                Lekar l = Lekari[index];
                Kluce.Remove(l.Kod);
                Lekari.Remove(l);

                return true;
            }
            return false;
        }
    }
}
