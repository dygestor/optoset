using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using System.Xml;

namespace Optoset
{
    public class ZmluvyController
    {

        private List<Zmluva> _zmluvy;
        private HashSet<string> _kluce;
        private const string fileName = "zmluvy.xml";

        public ZmluvyController()
        {
            Zmluvy = new List<Zmluva>();
            Kluce = new HashSet<string>();

            if (File.Exists(Directory.GetCurrentDirectory() + "\\data\\" + fileName))
            {
                Load();
            }
        }

        public List<Zmluva> Zmluvy
        {
            get { return _zmluvy; }
            set { _zmluvy = value; }
        }

        public HashSet<string> Kluce
        {
            get { return _kluce; }
            set { _kluce = value; }
        }

        public bool PridajZmluvu(string cislo, string nazov, string ico, string dic, string icdph, string adresa, string iban, string bic)
        {
            Zmluva z = new Zmluva(cislo, nazov, ico, dic, icdph, adresa, iban, bic);
            if (z.Validate())
            {
                if (Kluce.Contains(cislo))
                {
                    MessageBox.Show("Zmluva s daným číslom už existuje");
                    return false;
                }
                Zmluvy.Add(z);
                Kluce.Add(cislo);
                Zmluvy = Zmluvy.OrderBy(x => x.Cislo).ToList();
                return true;
            }
            return false;
        }

        public bool UpravitZmluvu(int index, string cislo, string nazov, string ico, string dic, string icdph, string adresa, string iban, string bic)
        {
            Zmluva z = Zmluvy[index];
            string oldCislo = z.Cislo;
            string oldNazov = z.Nazov;
            string oldIco = z.Ico;
            string oldDic = z.Dic;
            string oldIcdph = z.Icdph;
            string oldAdresa = z.Adresa;
            string oldIban = z.Iban;
            string oldBic = z.Bic;

            z.Cislo = cislo;
            z.Nazov = nazov;
            z.Ico = ico;
            z.Dic = dic;
            z.Icdph = icdph;
            z.Adresa = adresa;
            z.Iban = iban;
            z.Bic = bic;
            if (z.Validate())
            {
                if (Kluce.Contains(cislo) && !oldCislo.Equals(cislo))
                {
                    MessageBox.Show("Zmluva s daným číslom už existuje");
                    z.Cislo = oldCislo;
                    z.Nazov = oldNazov;
                    z.Ico = oldIco;
                    z.Dic = oldDic;
                    z.Icdph = oldIcdph;
                    z.Adresa = oldAdresa;
                    z.Iban = oldIban;
                    z.Bic = oldBic;
                    return false;
                }
                Kluce.Remove(oldCislo);
                Kluce.Add(cislo);
                Zmluvy = Zmluvy.OrderBy(x => x.Cislo).ToList();
                return true;
            }
            z.Cislo = oldCislo;
            z.Nazov = oldNazov;
            z.Ico = oldIco;
            z.Dic = oldDic;
            z.Icdph = oldIcdph;
            z.Adresa = oldAdresa;
            z.Iban = oldIban;
            z.Bic = oldBic;
            return false;
        }

        public bool ZmazatPobocku(int index)
        {
            DialogResult dr = MessageBox.Show("Naozaj chcete zmazať danú pobočku?", "Zmazanie pobočky", MessageBoxButtons.YesNo);
            if (dr == DialogResult.Yes)
            {
                Zmluva z = Zmluvy[index];
                Kluce.Remove(z.Cislo);
                Zmluvy.Remove(z);

                return true;
            }
            return false;
        }

        public void Save()
        {
            if (!Directory.Exists(Directory.GetCurrentDirectory() + "\\data"))
            {
                Directory.CreateDirectory(Directory.GetCurrentDirectory() + "\\data");
            }

            XmlWriterSettings settings = new XmlWriterSettings();
            settings.Indent = true;
            XmlWriter writer = XmlWriter.Create(Directory.GetCurrentDirectory() + "\\data\\" + fileName, settings);

            writer.WriteStartDocument();

            writer.WriteComment("This file is generated by the program.");

            writer.WriteStartElement("zmluvy");

            foreach (var z in Zmluvy)
            {
                writer.WriteStartElement("zmluva");
                writer.WriteElementString("cislo", z.Cislo);
                writer.WriteElementString("nazov", z.Nazov);
                writer.WriteElementString("ico", z.Ico);
                writer.WriteElementString("dic", z.Dic);
                writer.WriteElementString("icdph", z.Icdph);
                writer.WriteElementString("adresa", z.Adresa);
                writer.WriteElementString("iban", z.Iban);
                writer.WriteElementString("bic", z.Bic);
                writer.WriteEndElement();
            }

            writer.WriteEndElement();

            writer.WriteEndDocument();
            writer.Flush();
            writer.Close();
        }

        public void Load()
        {
            Zmluvy = new List<Zmluva>();
            var file = new XmlDocument();
            file.Load(Directory.GetCurrentDirectory() + "\\data\\" + fileName);

            var pb = file.GetElementsByTagName("zmluvy");
            if (pb.Count > 0)
            {
                XmlNodeList zmluvy = pb[0].SelectNodes("zmluva");
                foreach (XmlNode z in zmluvy)
                {
                    var cislo = z.SelectNodes("cislo")[0].InnerText;
                    var nazov = z.SelectNodes("nazov")[0].InnerText;
                    var ico = z.SelectNodes("ico")[0].InnerText;
                    var dic = z.SelectNodes("dic")[0].InnerText;
                    var icdph = z.SelectNodes("icdph")[0].InnerText;
                    var adresa = z.SelectNodes("adresa")[0].InnerText;
                    var iban = z.SelectNodes("iban")[0].InnerText;
                    var bic = z.SelectNodes("bic")[0].InnerText;
                    Zmluvy.Add(new Zmluva(cislo, nazov, ico, dic, icdph, adresa, iban, bic));
                    Kluce.Add(cislo);
                }
            }
        }
    }
}
